遇到哪些业务场景时考虑策略模式？
    当你的业务场景具备以下特征时，优先考虑策略模式：

    存在多种类似行为或算法：
        例如：多种支付方式、运输方式、折扣规则、压缩算法等。
    需要运行时动态切换行为：
        例如：用户下单时选择支付方式，系统根据配置选择排序算法。
    行为或算法可能频繁扩展：
        例如：电商平台可能不断新增支付方式或促销规则。
    避免条件语句的复杂逻辑：
        如果当前代码中已经有大量 if-else 或 switch 用于选择行为，策略模式可以简化代码。
    需要隔离具体实现：
        客户端代码不应该直接依赖具体实现，而是通过抽象接口交互。
    行为需要独立测试或复用：
        例如：支付逻辑、排序算法需要单独测试或在多个模块中使用。



策略模式与直接调用接口的区别在于多了一层 Context，客户端通过上下文选择和调用策略，而不是直接调用实现类的方法。